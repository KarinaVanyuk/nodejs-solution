swagger: '2.0'
info:
  description: 'First swagger'
  version: 1.0.0
  title: Swagger PostsStore
tags:
  - name: posts
    description: Everything about Posts
  - name: user
    description: Operations about User
  - name: comments
    description: Operations about comment
schemes:
  - http
paths:
  /posts:
    get:
      tags:
      - posts
      summary: Get all posts
      consumes:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/post'
        400:
          description: 'Bad request'
    post:
      tags:
      - posts
      summary: Add a new post
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Post object that needs to be added to the store
        required: true
        schema:
          type: object
          description: Post entity
          properties:
            title:
              type: string
            text:
              type: string
      responses:
        200:
          description: Success
        400:
          description: Invalid status value
  
  /posts/{postId}:
    get:
      tags:
      - posts
      summary: Get post by Id
      consumes:
      - application/json
      parameters:
      - name: postId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            items:
              $ref: '#/definitions/post'
        400:
          description: 'Invalid status value'
    delete:
      tags:
      - posts
      summary: Delete post
      consumes:
      - application/json
      parameters:
      - name: postId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
        400:
          description: 'Invalid status value'
    put:
      tags:
        - posts
      summary: Update post
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: postId        
        required: true
        type: string
      - in: body
        name: body
        description: Post object that needs to be added to the store
        required: true
        schema:
          type: object
          description: Post entity
          properties:
            title:
              type: string
            text:
              type: string
      responses:
        200:
          description: Success
        400:
          description: Invalid status value
  /posts/statistics:
    get:
      tags:
      - posts
      summary: Get statistics
      consumes:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              postsPerDay:
                type: number
              postsPerWeek:
                type: number
              postsPerMonth:
                type: number
        400:
          description: 'Invalid status value'
  /user:
    get:
      tags:
      - user
      summary: Get all users
      consumes:
      - application/json
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        400:
          description: 'Invalid status value'
  /user/{userId}:
    get:
      tags:
      -  user
      summary: Get user by id and gravatar info
      produces:
      -  application/json
      parameters:
      - name: userId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              userId:
                type: string
              name:
                type: string
              mail:
                type: string
              gravatarInfo:
                type: object
        400:
          description: 'Invalid status value'
    delete:
      tags:
      -  user
      summary: Delete user by id
      produces:
      -  application/json
      parameters:
      - name: userId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
        400:
          description: 'Invalid status value'
    put:
      tags:
      - user
      summary: Update user info
      produces:
      - application/json
      parameters:
      - name: userId
        in: path
        required: true
        type: string
      - in:  body
        name:  body
        description: User object for update
        required: true
        schema:
          type: object
          description: User entity
          properties:
            name:
              type: string
            mail:
              type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            items:
              $ref: '#/definitions/user'
        400:
          description: 'Invalid status value'
  /post/{postId}/comments:
    get:
      tags:
      - comments
      summary: Get all comments
      consumes:
      - application/json
      parameters:
      - name: postId
        in: path
        required: true
        type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        400:
          description: 'Invalid status value'
    post:
      tags:
      - comments
      summary: Post a comment
      consumes:
      - application/json
      parameters:
      - name: postId
        in: path
        required: true
        type: string
      - in: body
        name: body
        description: Comment object that needs to be added to the store
        required: true
        schema:
          type: object
          description: Comment entity
          properties:
            userId:
              type: string
            text:
              type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/user'
        400:
          description: 'Invalid status value'
definitions:
  post:
   properties:
    postId:
      type: string
    userID:
      type: string
    title:
      type: string
    text:
      type: string
    createdAt:
      type: string
  user:
    properties:
      userId:
        type: string
      name:
        type: string
      mail:
        type: string
  comment:
    properties:
      commentId:
        type: string
      postId:
        type: string
      userId:
        type: string
      text:
        type: string
      createdAt:
        type: string
responses:
  success:
    description: success